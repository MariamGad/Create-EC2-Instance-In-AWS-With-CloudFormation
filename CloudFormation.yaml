AWSTemplateFormatVersion: 2010-09-09
Description: Creates a VPC with public and private subnets , create instance and allow ssh and http
Resources:
  VPC: 
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 192.168.101.0/24
      Tags:
        - Key: "VPC-name"
          Value: "VPC02-mariam"
        
  PublicSubnetA: 
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: "eu-north-1a" 
      CidrBlock: 192.168.101.0/28
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
    
  PrivateSubnetB: 
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: "eu-north-1b"
      CidrBlock: 192.168.101.32/28
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC

## updates to add instance and allow traffic to it 

# to allow intance to access the internet 
# Internet Gateway allows communication between our VPC and the internet
  InternetGateway:
    Type: AWS::EC2::InternetGateway

# then this Internet Gateway is attached to our VPC
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

# for traffic routing we need route table
# cloudformation creating it by default  
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

#  now route any external traffic to this Internet gateway
  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

# associate that route table to our public subnet (PublicSubnetA)
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnetA

# create a security group that allow ssh and http traffic
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and ssh traffic
      GroupName: AllowSshHttpTraffic-mariam
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

# creating a new instance 
  MyInstance:
    Type: AWS::EC2::Instance
    Properties: 
      Tags:
        - Key: "name"
          Value: "CloudFormation-instance-mariam"
      ImageId: "ami-0da2705f65898c6a8"
      InstanceType: "t3.micro"
      SubnetId: !Ref PublicSubnetA
      SecurityGroupIds: 
        - !Ref InstanceSecurityGroup
      KeyName: "stockholm-mariam-key"